"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["node_modules_thirdweb-dev_sdk_dist_smart-contract-bf847122_browser_esm_js"],{

/***/ "./node_modules/@thirdweb-dev/sdk/dist/smart-contract-bf847122.browser.esm.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@thirdweb-dev/sdk/dist/smart-contract-bf847122.browser.esm.js ***!
  \************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SmartContract: function() { return /* binding */ SmartContract; }\n/* harmony export */ });\n/* harmony import */ var _assertEnabled_ea837eec_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./assertEnabled-ea837eec.browser.esm.js */ \"./node_modules/@thirdweb-dev/sdk/dist/assertEnabled-ea837eec.browser.esm.js\");\n/* harmony import */ var _contract_appuri_4e9cb063_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./contract-appuri-4e9cb063.browser.esm.js */ \"./node_modules/@thirdweb-dev/sdk/dist/contract-appuri-4e9cb063.browser.esm.js\");\n/* harmony import */ var _index_827e427d_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./index-827e427d.browser.esm.js */ \"./node_modules/@thirdweb-dev/sdk/dist/index-827e427d.browser.esm.js\");\n/* harmony import */ var _account_factory_f259ae3a_browser_esm_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./account-factory-f259ae3a.browser.esm.js */ \"./node_modules/@thirdweb-dev/sdk/dist/account-factory-f259ae3a.browser.esm.js\");\n/* harmony import */ var _transactions_ec5ea12e_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./transactions-ec5ea12e.browser.esm.js */ \"./node_modules/@thirdweb-dev/sdk/dist/transactions-ec5ea12e.browser.esm.js\");\n/* harmony import */ var _fetchCurrencyValue_39f97190_browser_esm_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./fetchCurrencyValue-39f97190.browser.esm.js */ \"./node_modules/@thirdweb-dev/sdk/dist/fetchCurrencyValue-39f97190.browser.esm.js\");\n/* harmony import */ var _contract_interceptor_6f8989ff_browser_esm_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./contract-interceptor-6f8989ff.browser.esm.js */ \"./node_modules/@thirdweb-dev/sdk/dist/contract-interceptor-6f8989ff.browser.esm.js\");\n/* harmony import */ var _contract_owner_1378b25d_browser_esm_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./contract-owner-1378b25d.browser.esm.js */ \"./node_modules/@thirdweb-dev/sdk/dist/contract-owner-1378b25d.browser.esm.js\");\n/* harmony import */ var _contract_platform_fee_dba35fa6_browser_esm_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./contract-platform-fee-dba35fa6.browser.esm.js */ \"./node_modules/@thirdweb-dev/sdk/dist/contract-platform-fee-dba35fa6.browser.esm.js\");\n/* harmony import */ var _contract_roles_94655dc4_browser_esm_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./contract-roles-94655dc4.browser.esm.js */ \"./node_modules/@thirdweb-dev/sdk/dist/contract-roles-94655dc4.browser.esm.js\");\n/* harmony import */ var _contract_sales_51f40eba_browser_esm_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./contract-sales-51f40eba.browser.esm.js */ \"./node_modules/@thirdweb-dev/sdk/dist/contract-sales-51f40eba.browser.esm.js\");\n/* harmony import */ var _erc_1155_094fadc3_browser_esm_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./erc-1155-094fadc3.browser.esm.js */ \"./node_modules/@thirdweb-dev/sdk/dist/erc-1155-094fadc3.browser.esm.js\");\n/* harmony import */ var _erc_20_e1bc30a0_browser_esm_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./erc-20-e1bc30a0.browser.esm.js */ \"./node_modules/@thirdweb-dev/sdk/dist/erc-20-e1bc30a0.browser.esm.js\");\n/* harmony import */ var _erc_721_6f1fbec1_browser_esm_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./erc-721-6f1fbec1.browser.esm.js */ \"./node_modules/@thirdweb-dev/sdk/dist/erc-721-6f1fbec1.browser.esm.js\");\n/* harmony import */ var _marketplacev3_offers_49f33f6e_browser_esm_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./marketplacev3-offers-49f33f6e.browser.esm.js */ \"./node_modules/@thirdweb-dev/sdk/dist/marketplacev3-offers-49f33f6e.browser.esm.js\");\n/* harmony import */ var _deployWithThrowawayDeployer_d258093f_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./deployWithThrowawayDeployer-d258093f.browser.esm.js */ \"./node_modules/@thirdweb-dev/sdk/dist/deployWithThrowawayDeployer-d258093f.browser.esm.js\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ethers */ \"./node_modules/ethers/lib.esm/index.js\");\n/* harmony import */ var tiny_invariant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tiny-invariant */ \"./node_modules/tiny-invariant/dist/esm/tiny-invariant.js\");\n/* harmony import */ var bn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! bn.js */ \"./node_modules/bn.js/lib/bn.js\");\n/* harmony import */ var bn_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(bn_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var bs58__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! bs58 */ \"./node_modules/bs58/index.js\");\n/* harmony import */ var bs58__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(bs58__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var eventemitter3__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! eventemitter3 */ \"./node_modules/eventemitter3/index.mjs\");\n/* harmony import */ var fast_deep_equal__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! fast-deep-equal */ \"./node_modules/fast-deep-equal/index.js\");\n/* harmony import */ var fast_deep_equal__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(fast_deep_equal__WEBPACK_IMPORTED_MODULE_4__);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * @public\n */\nclass Airdrop1155 {\n  featureName = _index_827e427d_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__.dI.name;\n  constructor(contractWrapper) {\n    this.contractWrapper = contractWrapper;\n  }\n\n  /**\n   * @internal\n   */\n  getAddress() {\n    return this.contractWrapper.address;\n  }\n\n  /** ******************************\n   * WRITE FUNCTIONS\n   *******************************/\n\n  /**\n   * Perform airdrop of ERC1155 tokens\n   *\n   * @example\n   * ```javascript\n   * // Airdrop content array, with recipients and tokenIds\n   * const contents = [\n   *      {\n   *        recipient: \"0xabc...\", // first recipient address\n   *        tokenId: 0,\n   *        amount: \"10\" // number of tokens\n   *      },\n   *      {\n   *        recipient: \"0x123...\", // second recipient address\n   *        tokenId: 0\n   *        amount: \"20\" // number of tokens\n   *      }\n   *   ]\n   *\n   * const tokenAddress = \"0x...\" // Address of the ERC1155 token being airdropped\n   * const tokenOwner = \"0x...\" // Address of the owner of the tokens being airdropped\n   *\n   * const output = await contract.airdrop1155.drop(tokenAddress, tokenOwner, contents);\n   *\n   * // the `output` return value above contains:\n   * //     - count of successful and failed drops\n   * //     - array containing failed drops, if any\n   *\n   * ```\n   * @param tokenAddress - Address of the ERC1155 token being airdropped\n   * @param tokenOwner - Address of the owner of the tokens being airdropped\n   * @param contents - Array of recipients and tokenIds to airdrop\n   *\n   * @returns an array of recipients for who the airdrop failed (empty means all transfers were successful)\n   * @twfeature AirdropERC1155\n   */\n  drop = /* @__PURE__ */(0,_transactions_ec5ea12e_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__.c)(async (tokenAddress, tokenOwner, contents) => {\n    return _transactions_ec5ea12e_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__.T.fromContractWrapper({\n      contractWrapper: this.contractWrapper,\n      method: \"airdropERC1155\",\n      args: [tokenAddress, tokenOwner, contents],\n      parse: receipt => {\n        const events = this.contractWrapper.parseLogs(\"AirdropFailed\", receipt.logs);\n        const failedDrops = events.map(e => {\n          return {\n            recipient: e.args.recipient,\n            tokenId: e.args.tokenId.toNumber(),\n            amount: e.args.amount.toString()\n          };\n        });\n        return {\n          successfulDropCount: contents.length - failedDrops.length,\n          failedDropCount: failedDrops.length,\n          failedDrops\n        };\n      }\n    });\n  });\n}\n\n/**\n * @public\n */\nclass Airdrop20 {\n  featureName = _index_827e427d_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__.dJ.name;\n  constructor(contractWrapper) {\n    this.contractWrapper = contractWrapper;\n  }\n\n  /**\n   * @internal\n   */\n  getAddress() {\n    return this.contractWrapper.address;\n  }\n\n  /** ******************************\n   * WRITE FUNCTIONS\n   *******************************/\n\n  /**\n   * Perform airdrop of ERC20 tokens\n   *\n   * @example\n   * ```javascript\n   * // Airdrop content array, with recipients and token amounts\n   * const contents = [\n   *      {\n   *        recipient: \"0xabc...\", // first recipient address\n   *        amount: \"10\" // number of tokens in wei units\n   *      },\n   *      {\n   *        recipient: \"0x123...\", // second recipient address\n   *        amount: \"20\" // number of tokens in wei units\n   *      }\n   *   ]\n   *\n   * const tokenAddress = \"0x...\" // Address of the ERC20 token being airdropped\n   * const tokenOwner = \"0x...\" // Address of the owner of the tokens being airdropped\n   *\n   * const output = await contract.airdrop20.drop(tokenAddress, tokenOwner, contents);\n   *\n   * // the `output` return value above contains:\n   * //     - count of successful and failed drops\n   * //     - array containing failed drops, if any\n   *\n   * ```\n   * @param tokenAddress - Address of the ERC20 token being airdropped\n   * @param tokenOwner - Address of the owner of the tokens being airdropped\n   * @param contents - Array of airdrop contents\n   *\n   * @returns an array of recipients for who the airdrop failed (empty means all transfers were successful)\n   * @twfeature AirdropERC20\n   */\n  drop = /* @__PURE__ */(0,_transactions_ec5ea12e_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__.c)(async (tokenAddress, tokenOwner, contents) => {\n    return _transactions_ec5ea12e_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__.T.fromContractWrapper({\n      contractWrapper: this.contractWrapper,\n      method: \"airdropERC20\",\n      args: [tokenAddress, tokenOwner, contents],\n      parse: receipt => {\n        const events = this.contractWrapper.parseLogs(\"AirdropFailed\", receipt.logs);\n        const failedDrops = events.map(e => {\n          return {\n            recipient: e.args.recipient,\n            amount: e.args.amount.toString()\n          };\n        });\n        return {\n          successfulDropCount: contents.length - failedDrops.length,\n          failedDropCount: failedDrops.length,\n          failedDrops\n        };\n      }\n    });\n  });\n}\n\n/**\n * @public\n */\nclass Airdrop721 {\n  featureName = _index_827e427d_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__.dK.name;\n  constructor(contractWrapper) {\n    this.contractWrapper = contractWrapper;\n  }\n\n  /**\n   * @internal\n   */\n  getAddress() {\n    return this.contractWrapper.address;\n  }\n\n  /** ******************************\n   * WRITE FUNCTIONS\n   *******************************/\n\n  /**\n   * Perform airdrop of ERC721 tokens\n   *\n   * @example\n   * ```javascript\n   * // Airdrop content array, with recipients and tokenIds\n   * const contents = [\n   *      {\n   *        recipient: \"0xabc...\", // first recipient address\n   *        tokenId: 0\n   *      },\n   *      {\n   *        recipient: \"0x123...\", // second recipient address\n   *        tokenId: 2\n   *      }\n   *   ]\n   *\n   * const tokenAddress = \"0x...\" // Address of the ERC721 token being airdropped\n   * const tokenOwner = \"0x...\" // Address of the owner of the tokens being airdropped\n   *\n   * const output = await contract.airdrop721.drop(tokenAddress, tokenOwner, contents);\n   *\n   * // the `output` return value above contains:\n   * //     - count of successful and failed drops\n   * //     - array containing failed drops, if any\n   *\n   * ```\n   * @param tokenAddress - Address of the ERC721 token being airdropped\n   * @param tokenOwner - Address of the owner of the tokens being airdropped\n   * @param contents - Array of recipients and tokenIds to airdrop\n   *\n   * @returns an array of recipients for who the airdrop failed (empty means all transfers were successful)\n   * @twfeature AirdropERC721\n   */\n  drop = /* @__PURE__ */(0,_transactions_ec5ea12e_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__.c)(async (tokenAddress, tokenOwner, contents) => {\n    return _transactions_ec5ea12e_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__.T.fromContractWrapper({\n      contractWrapper: this.contractWrapper,\n      method: \"airdropERC721\",\n      args: [tokenAddress, tokenOwner, contents],\n      parse: receipt => {\n        const events = this.contractWrapper.parseLogs(\"AirdropFailed\", receipt.logs);\n        const failedDrops = events.map(e => {\n          return {\n            recipient: e.args.recipient,\n            tokenId: e.args.tokenId.toNumber()\n          };\n        });\n        return {\n          successfulDropCount: contents.length - failedDrops.length,\n          failedDropCount: failedDrops.length,\n          failedDrops\n        };\n      }\n    });\n  });\n}\n\nclass ExtensionManager {\n  featureName = _index_827e427d_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__.dL.name;\n  constructor(contractWrapper) {\n    this.contractWrapper = contractWrapper;\n  }\n  getAddress() {\n    return this.contractWrapper.readContract.address;\n  }\n\n  /** ******************************\n   * READ FUNCTIONS\n   *******************************/\n\n  async getAll() {\n    const extensions = await this.contractWrapper.readContract.getAllExtensions();\n    return extensions;\n  }\n  async get(extensionName) {\n    const extension = await this.contractWrapper.readContract.getExtension(extensionName);\n    return extension;\n  }\n  async getExtensionAddress(extensionName) {\n    const extension = await this.get(extensionName);\n    return extension.metadata.implementation;\n  }\n  async getAllFunctions(extensionName) {\n    const extension = await this.get(extensionName);\n    return extension.functions;\n  }\n  async getExtensionForFunction(functionInput) {\n    let selector = functionInput.functionSelector;\n    if (!selector) {\n      (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(functionInput.functionSignature, \"Atleast one of function selector and signature must be provided\");\n      selector = ethers__WEBPACK_IMPORTED_MODULE_7__.utils.id(functionInput.functionSignature).substring(0, 10);\n    }\n    const extensionMetadata = await this.contractWrapper.readContract.getMetadataForFunction(selector);\n    return extensionMetadata;\n  }\n  async getExtensionAddressForFunction(functionInput) {\n    const extensionMetadata = await this.getExtensionForFunction(functionInput);\n    return extensionMetadata.implementation;\n  }\n\n  /** ******************************\n   * WRITE FUNCTIONS\n   *******************************/\n\n  /**\n   * Adds an extension to the contract\n   */\n  add = /* @__PURE__ */(0,_transactions_ec5ea12e_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__.c)(async inputArgs => {\n    return _transactions_ec5ea12e_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__.T.fromContractWrapper({\n      contractWrapper: this.contractWrapper,\n      method: \"addExtension\",\n      args: [inputArgs.extension],\n      parse: async receipt => {\n        const events = this.contractWrapper.parseLogs(\"ExtensionAdded\", receipt.logs);\n        if (events.length < 1) {\n          throw new Error(\"No ExtensionAdded event found\");\n        }\n        const extensionAbi = inputArgs.extensionAbi ? _index_827e427d_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__.bn.parse(inputArgs.extensionAbi) : (await (0,_index_827e427d_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__.K)(inputArgs.extension.metadata.implementation, this.contractWrapper.getProvider(), this.contractWrapper.storage)).abi;\n        const abiToAdd = this.filterAbiForAdd(extensionAbi, inputArgs.extension);\n        const updatedAbi = (0,_index_827e427d_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__.an)([_index_827e427d_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__.bn.parse(this.contractWrapper.abi), abiToAdd]);\n        this.contractWrapper.updateAbi(updatedAbi);\n        return receipt;\n      }\n    });\n  });\n\n  /**\n   * Adds a deployed extension to the contract\n   */\n  addDeployed = /* @__PURE__ */(0,_transactions_ec5ea12e_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__.c)(async inputArgs => {\n    let extensionAbi = inputArgs.extensionAbi;\n    if (!extensionAbi) {\n      const metadata = await (0,_index_827e427d_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__.K)(inputArgs.extensionAddress, this.contractWrapper.getProvider(), this.contractWrapper.storage, this.contractWrapper.options);\n      extensionAbi = metadata.abi;\n    }\n    (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(extensionAbi, \"Require extension ABI\");\n    let extensionMetadataUri = \"\";\n    if (inputArgs.extensionMetadata) {\n      if (typeof inputArgs.extensionMetadata === \"string\") {\n        extensionMetadataUri = inputArgs.extensionMetadata;\n      } else {\n        const parsedMetadata = await _index_827e427d_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__.bF.parseAsync(inputArgs.extensionMetadata);\n        extensionMetadataUri = await this.contractWrapper.storage.upload(parsedMetadata);\n      }\n    }\n    const extensionFunctions = (0,_deployWithThrowawayDeployer_d258093f_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.b)(_index_827e427d_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__.bn.parse(extensionAbi));\n    const extension = {\n      metadata: {\n        name: inputArgs.extensionName,\n        metadataURI: extensionMetadataUri,\n        implementation: inputArgs.extensionAddress\n      },\n      functions: extensionFunctions\n    };\n    return this.add.prepare({\n      extension,\n      extensionAbi\n    });\n  });\n\n  /**\n   * Adds a published extension to the contract, and deploys it deterministically if necessary\n   */\n  addPublished = /* @__PURE__ */(0,_transactions_ec5ea12e_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__.c)(async inputArgs => {\n    const version = inputArgs.version || \"latest\";\n    const {\n      deployedExtensionAddress,\n      extensionMetadata\n    } = await this.deployExtension(inputArgs.extensionName, inputArgs.publisherAddress || _index_827e427d_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__.aL, version);\n    return this.addDeployed.prepare({\n      extensionName: inputArgs.extensionName,\n      extensionAddress: deployedExtensionAddress,\n      extensionMetadata: inputArgs.extensionMetadataOverride || extensionMetadata\n    });\n  });\n  replace = /* @__PURE__ */(0,_transactions_ec5ea12e_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__.c)(async inputArgs => {\n    return _transactions_ec5ea12e_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__.T.fromContractWrapper({\n      contractWrapper: this.contractWrapper,\n      method: \"replaceExtension\",\n      args: [inputArgs.extension],\n      parse: async receipt => {\n        const events = this.contractWrapper.parseLogs(\"ExtensionReplaced\", receipt.logs);\n        if (events.length < 1) {\n          throw new Error(\"No ExtensionReplaced event found\");\n        }\n        const extensionAbi = inputArgs.extensionAbi ? _index_827e427d_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__.bn.parse(inputArgs.extensionAbi) : (await (0,_index_827e427d_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__.K)(inputArgs.extension.metadata.implementation, this.contractWrapper.getProvider(), this.contractWrapper.storage)).abi;\n        const contractAbi = this.filterAbiForRemove(_index_827e427d_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__.bn.parse(this.contractWrapper.abi), extensionAbi);\n        const abiToAdd = this.filterAbiForAdd(extensionAbi, inputArgs.extension);\n        const updatedAbi = (0,_index_827e427d_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__.an)([contractAbi, abiToAdd]);\n        this.contractWrapper.updateAbi(updatedAbi);\n        return receipt;\n      }\n    });\n  });\n  replaceDeployed = /* @__PURE__ */(0,_transactions_ec5ea12e_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__.c)(async inputArgs => {\n    let extensionAbi = inputArgs.extensionAbi;\n    if (!extensionAbi) {\n      const metadata = await (0,_index_827e427d_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__.K)(inputArgs.extensionAddress, this.contractWrapper.getProvider(), this.contractWrapper.storage, this.contractWrapper.options);\n      extensionAbi = metadata.abi;\n    }\n    (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(extensionAbi, \"Require extension ABI\");\n    let extensionMetadataUri = \"\";\n    if (inputArgs.extensionMetadata) {\n      if (typeof inputArgs.extensionMetadata === \"string\") {\n        extensionMetadataUri = inputArgs.extensionMetadata;\n      } else {\n        const parsedMetadata = await _index_827e427d_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__.bF.parseAsync(inputArgs.extensionMetadata);\n        extensionMetadataUri = await this.contractWrapper.storage.upload(parsedMetadata);\n      }\n    }\n    const extensionFunctions = (0,_deployWithThrowawayDeployer_d258093f_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.b)(_index_827e427d_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__.bn.parse(extensionAbi));\n    const extension = {\n      metadata: {\n        name: inputArgs.extensionName,\n        metadataURI: extensionMetadataUri,\n        implementation: inputArgs.extensionAddress\n      },\n      functions: extensionFunctions\n    };\n    return this.replace.prepare({\n      extension,\n      extensionAbi\n    });\n  });\n  replacePublished = /* @__PURE__ */(0,_transactions_ec5ea12e_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__.c)(async inputArgs => {\n    const version = inputArgs.version || \"latest\";\n    const {\n      deployedExtensionAddress,\n      extensionMetadata\n    } = await this.deployExtension(inputArgs.extensionName, inputArgs.publisherAddress || _index_827e427d_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__.aL, version);\n    return this.replaceDeployed.prepare({\n      extensionName: inputArgs.extensionName,\n      extensionAddress: deployedExtensionAddress,\n      extensionMetadata: inputArgs.extensionMetadataOverride || extensionMetadata\n    });\n  });\n  remove = /* @__PURE__ */(0,_transactions_ec5ea12e_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__.c)(async inputArgs => {\n    const extensionAddress = await this.getExtensionAddress(inputArgs.extensionName);\n    return _transactions_ec5ea12e_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__.T.fromContractWrapper({\n      contractWrapper: this.contractWrapper,\n      method: \"removeExtension\",\n      args: [inputArgs.extensionName],\n      parse: async receipt => {\n        const events = this.contractWrapper.parseLogs(\"ExtensionRemoved\", receipt.logs);\n        if (events.length < 1) {\n          throw new Error(\"No ExtensionRemoved event found\");\n        }\n        const extensionAbi = (await (0,_index_827e427d_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__.K)(extensionAddress, this.contractWrapper.getProvider(), this.contractWrapper.storage)).abi;\n        const updatedAbi = this.filterAbiForRemove(_index_827e427d_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__.bn.parse(this.contractWrapper.abi), extensionAbi);\n        this.contractWrapper.updateAbi(updatedAbi);\n        return receipt;\n      }\n    });\n  });\n\n  /** ******************************\n   * Internal / private\n   *******************************/\n\n  filterAbiForAdd(extensionAbi, extension) {\n    const extensionAbiInterface = new ethers__WEBPACK_IMPORTED_MODULE_7__.utils.Interface(extensionAbi);\n    const extensionFunctionSelectors = extension.functions.map(fn => fn.functionSelector);\n    const filtered = extensionAbi.filter(item => {\n      const fnFragment = Object.values(new ethers__WEBPACK_IMPORTED_MODULE_7__.utils.Interface([item]).functions);\n      if (fnFragment.length === 0) {\n        return false;\n      }\n      const fnSigHash = extensionAbiInterface.getSighash(fnFragment[0]);\n      return extensionFunctionSelectors.includes(fnSigHash);\n    });\n    return filtered;\n  }\n  filterAbiForRemove(fullAbi, abiToRemove) {\n    const fullAbiInterface = new ethers__WEBPACK_IMPORTED_MODULE_7__.utils.Interface(fullAbi);\n    const interfaceToRemove = new ethers__WEBPACK_IMPORTED_MODULE_7__.utils.Interface(abiToRemove);\n    const functionsToRemove = Object.values(interfaceToRemove.functions).map(fn => interfaceToRemove.getSighash(fn));\n    const filtered = fullAbi.filter(item => {\n      const fnFragment = Object.values(new ethers__WEBPACK_IMPORTED_MODULE_7__.utils.Interface([item]).functions);\n      if (fnFragment.length === 0) {\n        return false;\n      }\n      const fnSigHash = fullAbiInterface.getSighash(fnFragment[0]);\n      return !functionsToRemove.includes(fnSigHash);\n    });\n    return filtered;\n  }\n  async deployExtension(extensionName, publisherAddress) {\n    let version = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"latest\";\n    const published = await (0,_index_827e427d_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__.aM)(publisherAddress, extensionName, version, this.contractWrapper.storage, this.contractWrapper.options.clientId, this.contractWrapper.options.secretKey);\n    const deploymentInfo = await (0,_deployWithThrowawayDeployer_d258093f_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.g)(published.metadataUri, this.contractWrapper.storage, this.contractWrapper.getProvider(), \"\", this.contractWrapper.options.clientId, this.contractWrapper.options.secretKey);\n    const implementationAddress = deploymentInfo.find(i => i.type === \"implementation\")?.transaction.predictedAddress;\n\n    // deploy infra + plugins + implementation using a throwaway Deployer contract\n\n    // filter out already deployed contracts (data is empty)\n    const transactionsToSend = deploymentInfo.filter(i => i.transaction.data && i.transaction.data.length > 0);\n    const transactionsforDirectDeploy = transactionsToSend.filter(i => {\n      return i.type !== \"infra\";\n    }).map(i => i.transaction);\n    const transactionsForThrowawayDeployer = transactionsToSend.filter(i => {\n      return i.type === \"infra\";\n    }).map(i => i.transaction);\n    const signer = this.contractWrapper.getSigner();\n    (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(signer, \"Signer is required\");\n\n    // deploy via throwaway deployer, multiple infra contracts in one transaction\n    await (0,_deployWithThrowawayDeployer_d258093f_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.a)(signer, transactionsForThrowawayDeployer, {});\n\n    // send each transaction directly to Create2 factory\n    // process txns one at a time\n    for (const tx of transactionsforDirectDeploy) {\n      try {\n        await (0,_deployWithThrowawayDeployer_d258093f_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.d)(signer, tx);\n      } catch (e) {\n        console.debug(`Error deploying contract at ${tx.predictedAddress}`, e?.message);\n      }\n    }\n    return {\n      deployedExtensionAddress: implementationAddress,\n      extensionMetadata: published.metadataUri\n    };\n  }\n}\n\n/**\n * Custom contract dynamic class with feature detection\n *\n * @example\n *\n * ```javascript\n * import { ThirdwebSDK } from \"@thirdweb-dev/sdk\";\n *\n * const sdk = new ThirdwebSDK(provider);\n * const contract = await sdk.getContract(\"{{contract_address}}\");\n *\n * // call any function in your contract\n * await contract.call(\"myCustomFunction\", [param1, param2]);\n *\n * // if your contract follows the ERC721 standard, contract.nft will be present\n * const allNFTs = await contract.erc721.query.all()\n *\n * // if your contract extends IMintableERC721, contract.nft.mint() will be available\n * const tx = await contract.erc721.mint({\n *     name: \"Cool NFT\",\n *     image: readFileSync(\"some_image.png\"),\n *   });\n * ```\n *\n * @beta\n */\nclass SmartContract {\n  // utilities\n\n  get abi() {\n    return _index_827e427d_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__.bn.parse(this.contractWrapper.abi || []);\n  }\n\n  /**\n   * Handle royalties\n   */\n  get royalties() {\n    return (0,_assertEnabled_ea837eec_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.a)(this.detectRoyalties(), _index_827e427d_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__.d4);\n  }\n\n  /**\n   * Handle permissions\n   */\n  get roles() {\n    return (0,_assertEnabled_ea837eec_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.a)(this.detectRoles(), _index_827e427d_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__.d3);\n  }\n\n  /**\n   * Handle primary sales\n   */\n  get sales() {\n    return (0,_assertEnabled_ea837eec_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.a)(this.detectPrimarySales(), _index_827e427d_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__.d6);\n  }\n\n  /**\n   * Handle platform fees\n   */\n  get platformFees() {\n    return (0,_assertEnabled_ea837eec_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.a)(this.detectPlatformFees(), _index_827e427d_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__.dn);\n  }\n\n  /**\n   * Set and get the owner of the contract\n   */\n  get owner() {\n    return (0,_assertEnabled_ea837eec_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.a)(this.detectOwnable(), _index_827e427d_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__.d5);\n  }\n\n  /**\n   * Auto-detects ERC20 standard functions.\n   */\n  get erc20() {\n    return (0,_assertEnabled_ea837eec_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.a)(this.detectErc20(), _index_827e427d_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__.cL);\n  }\n\n  /**\n   * Auto-detects ERC721 standard functions.\n   */\n  get erc721() {\n    return (0,_assertEnabled_ea837eec_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.a)(this.detectErc721(), _index_827e427d_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__.d0);\n  }\n\n  /**\n   * Auto-detects ERC1155 standard functions.\n   */\n  get erc1155() {\n    return (0,_assertEnabled_ea837eec_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.a)(this.detectErc1155(), _index_827e427d_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__.di);\n  }\n\n  /**\n   * Auto-detects AppURI standard functions.\n   */\n  get app() {\n    return (0,_assertEnabled_ea837eec_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.a)(this.detectApp(), _index_827e427d_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__.d2);\n  }\n\n  /**\n   * Direct listings\n   * @remarks Create and manage direct listings in your marketplace.\n   * ```javascript\n   * // Data of the listing you want to create\n   * const listing = {\n   *   // address of the contract the asset you want to list is on\n   *   assetContractAddress: \"0x...\",\n   *   // token ID of the asset you want to list\n   *   tokenId: \"0\",\n   *   // how many of the asset you want to list\n   *   quantity: 1,\n   *   // address of the currency contract that will be used to pay for the listing\n   *   currencyContractAddress: NATIVE_TOKEN_ADDRESS,\n   *   // The price to pay per unit of NFTs listed.\n   *   pricePerToken: 1.5,\n   *   // when should the listing open up for offers\n   *   startTimestamp: new Date(Date.now()),\n   *   // how long the listing will be open for\n   *   endTimestamp: new Date(Date.now() + 5 * 24 * 60 * 60 * 1000),\n   *   // Whether the listing is reserved for a specific set of buyers.\n   *   isReservedListing: false\n   * }\n   *\n   * const tx = await contract.directListings.createListing(listing);\n   * const receipt = tx.receipt; // the transaction receipt\n   * const id = tx.id; // the id of the newly created listing\n   *\n   * // And on the buyers side:\n   * // The ID of the listing you want to buy from\n   * const listingId = 0;\n   * // Quantity of the asset you want to buy\n   * const quantityDesired = 1;\n   *\n   * await contract.directListings.buyFromListing(listingId, quantityDesired);\n   * ```\n   */\n  get directListings() {\n    return (0,_assertEnabled_ea837eec_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.a)(this.detectDirectListings(), _index_827e427d_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__.dk);\n  }\n  /**\n   * Auctions\n   * @remarks Create and manage auctions in your marketplace.\n   * @example\n   * ```javascript\n   * // Data of the auction you want to create\n   * const auction = {\n   *   // address of the contract of the asset you want to auction\n   *   assetContractAddress: \"0x...\",\n   *   // token ID of the asset you want to auction\n   *   tokenId: \"0\",\n   *   // how many of the asset you want to auction\n   *   quantity: 1,\n   *   // address of the currency contract that will be used to pay for the auctioned tokens\n   *   currencyContractAddress: NATIVE_TOKEN_ADDRESS,\n   *   // the minimum bid that will be accepted for the token\n   *   minimumBidAmount: \"1.5\",\n   *   // how much people would have to bid to instantly buy the asset\n   *   buyoutBidAmount: \"10\",\n   *   // If a bid is made less than these many seconds before expiration, the expiration time is increased by this.\n   *   timeBufferInSeconds: \"1000\",\n   *   // A bid must be at least this much bps greater than the current winning bid\n   *   bidBufferBps: \"100\", // 100 bps stands for 1%\n   *   // when should the auction open up for bidding\n   *   startTimestamp: new Date(Date.now()),\n   *   // end time of auction\n   *   endTimestamp: new Date(Date.now() + 5 * 24 * 60 * 60 * 1000),\n   * }\n   *\n   * const tx = await contract.englishAuctions.createAuction(auction);\n   * const receipt = tx.receipt; // the transaction receipt\n   * const id = tx.id; // the id of the newly created auction\n   *\n   * // And on the buyers side:\n   * // The auction ID of the asset you want to bid on\n   * const auctionId = 0;\n   * // The total amount you are willing to bid for auctioned tokens\n   * const bidAmount = 1;\n   *\n   * await contract.englishAuctions.makeBid(auctionId, bidAmount);\n   * ```\n   */\n  get englishAuctions() {\n    return (0,_assertEnabled_ea837eec_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.a)(this.detectEnglishAuctions(), _index_827e427d_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__.dl);\n  }\n\n  /**\n   * Offers\n   * @remarks Make and manage offers.\n   * @example\n   * ```javascript\n   * // Data of the offer you want to make\n   * const offer = {\n   *   // address of the contract the asset you want to make an offer for\n   *   assetContractAddress: \"0x...\",\n   *   // token ID of the asset you want to buy\n   *   tokenId: \"0\",\n   *   // how many of the asset you want to buy\n   *   quantity: 1,\n   *   // address of the currency contract that you offer to pay in\n   *   currencyContractAddress: NATIVE_TOKEN_ADDRESS,\n   *   // Total price you offer to pay for the mentioned token(s)\n   *   totalPrice: \"1.5\",\n   *   // Offer valid until\n   *   endTimestamp: new Date(),\n   * }\n   *\n   * const tx = await contract.offers.makeOffer(offer);\n   * const receipt = tx.receipt; // the transaction receipt\n   * const id = tx.id; // the id of the newly created offer\n   *\n   * // And on the seller's side:\n   * // The ID of the offer you want to accept\n   * const offerId = 0;\n   * await contract.offers.acceptOffer(offerId);\n   * ```\n   */\n  get offers() {\n    return (0,_assertEnabled_ea837eec_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.a)(this.detectOffers(), _index_827e427d_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__.dm);\n  }\n  get airdrop20() {\n    return (0,_assertEnabled_ea837eec_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.a)(this.detectAirdrop20(), _index_827e427d_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__.dJ);\n  }\n  get airdrop721() {\n    return (0,_assertEnabled_ea837eec_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.a)(this.detectAirdrop721(), _index_827e427d_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__.dK);\n  }\n  get airdrop1155() {\n    return (0,_assertEnabled_ea837eec_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.a)(this.detectAirdrop1155(), _index_827e427d_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__.dI);\n  }\n\n  /**\n   * Account Factory\n   *\n   * @remarks Create accounts and fetch data about them.\n   * @example\n   * ```javascript\n   *\n   * // Predict the address of the account that will be created for an admin.\n   * const deterministicAddress = await contract.accountFactory.predictAccountAddress(admin, extraData);\n   *\n   * // Create accounts\n   * const tx = await contract.accountFactory.createAccount(admin, extraData);\n   * // the same as `deterministicAddress`\n   * const accountAddress = tx.address;\n   *\n   * // Get all accounts created by the factory\n   * const allAccounts = await contract.accountFactory.getAllAccounts();\n   *\n   * // Get all accounts on which a signer has been given authority.\n   * const associatedAccounts = await contract.accountFactory.getAssociatedAccounts(signer);\n   *\n   * // Get all signers who have been given authority on a account.\n   * const associatedSigners = await contract.accountFactory.getAssociatedSigners(accountAddress);\n   *\n   * // Check whether a account has already been created for a given admin.\n   * const isAccountDeployed = await contract.accountFactory.isAccountDeployed(admin, extraData);\n   * ```\n   */\n  get accountFactory() {\n    return (0,_assertEnabled_ea837eec_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.a)(this.detectAccountFactory(), _index_827e427d_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__.dr);\n  }\n\n  // TODO documentation\n  get account() {\n    return (0,_assertEnabled_ea837eec_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.a)(this.detectAccount(), _index_827e427d_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__.dq);\n  }\n  get extensions() {\n    return (0,_assertEnabled_ea837eec_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.a)(this.detectBaseRouter(), _index_827e427d_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__.dL);\n  }\n  get chainId() {\n    return this._chainId;\n  }\n  constructor(network, address, abi, storage) {\n    let options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n    let chainId = arguments.length > 5 ? arguments[5] : undefined;\n    let contractWrapper = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : new _index_827e427d_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__.cu(network, address, abi, options, storage);\n    this._chainId = chainId;\n    this.storage = storage;\n    this.contractWrapper = contractWrapper;\n    this.events = new _contract_appuri_4e9cb063_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__.a(this.contractWrapper);\n    this.encoder = new _fetchCurrencyValue_39f97190_browser_esm_js__WEBPACK_IMPORTED_MODULE_11__.C(this.contractWrapper);\n    this.interceptor = new _contract_interceptor_6f8989ff_browser_esm_js__WEBPACK_IMPORTED_MODULE_12__.C(this.contractWrapper);\n    this.estimator = new _contract_appuri_4e9cb063_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__.G(this.contractWrapper);\n    this.publishedMetadata = new _account_factory_f259ae3a_browser_esm_js__WEBPACK_IMPORTED_MODULE_13__.C(this.contractWrapper, this.storage);\n    this.metadata = new _contract_appuri_4e9cb063_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__.C(this.contractWrapper, _index_827e427d_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__.bk, this.storage);\n  }\n  onNetworkUpdated(network) {\n    this.contractWrapper.updateSignerOrProvider(network);\n  }\n  getAddress() {\n    return this.contractWrapper.address;\n  }\n\n  /**\n   * Prepare a transaction for sending\n   */\n  prepare(method, args, overrides) {\n    return _transactions_ec5ea12e_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__.T.fromContractWrapper({\n      contractWrapper: this.contractWrapper,\n      method,\n      args,\n      overrides\n    });\n  }\n\n  /**\n   * Call any function on this contract\n   * @example\n   * ```javascript\n   * // read functions will return the data from the contract\n   * const myValue = await contract.call(\"myReadFunction\");\n   * console.log(myValue);\n   *\n   * // write functions will return the transaction receipt\n   * const tx = await contract.call(\"myWriteFunction\", [arg1, arg2]);\n   * const receipt = tx.receipt;\n   *\n   * // Optionally override transaction options\n   * await contract.call(\"myWriteFunction\", [arg1, arg2], {\n   *  gasLimit: 1000000, // override default gas limit\n   *  value: ethers.utils.parseEther(\"0.1\"), // send 0.1 ether with the contract call\n   * };\n   * ```\n   * @param functionName - the name of the function to call\n   * @param args - the arguments of the function\n   */\n  async call(functionName, args, overrides) {\n    return this.contractWrapper.call(functionName, args, overrides);\n  }\n\n  /** ********************\n   * FEATURE DETECTION\n   * ********************/\n\n  detectRoyalties() {\n    if ((0,_contract_appuri_4e9cb063_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__.d)(this.contractWrapper, \"Royalty\")) {\n      // ContractMetadata is stateless, it's fine to create a new one here\n      // This also makes it not order dependent in the feature detection process\n      const metadata = new _contract_appuri_4e9cb063_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__.C(this.contractWrapper, _index_827e427d_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__.bk, this.storage);\n      return new _contract_owner_1378b25d_browser_esm_js__WEBPACK_IMPORTED_MODULE_14__.C(this.contractWrapper, metadata);\n    }\n    return undefined;\n  }\n  detectRoles() {\n    if ((0,_contract_appuri_4e9cb063_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__.d)(this.contractWrapper, \"Permissions\")) {\n      return new _contract_roles_94655dc4_browser_esm_js__WEBPACK_IMPORTED_MODULE_15__.C(this.contractWrapper, _index_827e427d_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__.G);\n    }\n    return undefined;\n  }\n  detectPrimarySales() {\n    if ((0,_contract_appuri_4e9cb063_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__.d)(this.contractWrapper, \"PrimarySale\")) {\n      return new _contract_sales_51f40eba_browser_esm_js__WEBPACK_IMPORTED_MODULE_16__.C(this.contractWrapper);\n    }\n    return undefined;\n  }\n  detectPlatformFees() {\n    if ((0,_contract_appuri_4e9cb063_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__.d)(this.contractWrapper, \"PlatformFee\")) {\n      return new _contract_platform_fee_dba35fa6_browser_esm_js__WEBPACK_IMPORTED_MODULE_17__.C(this.contractWrapper);\n    }\n    return undefined;\n  }\n  detectErc20() {\n    if ((0,_contract_appuri_4e9cb063_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__.d)(this.contractWrapper, \"ERC20\")) {\n      return new _erc_20_e1bc30a0_browser_esm_js__WEBPACK_IMPORTED_MODULE_18__.f(this.contractWrapper, this.storage, this.chainId);\n    }\n    return undefined;\n  }\n  detectErc721() {\n    if ((0,_contract_appuri_4e9cb063_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__.d)(this.contractWrapper, \"ERC721\")) {\n      return new _erc_721_6f1fbec1_browser_esm_js__WEBPACK_IMPORTED_MODULE_19__.h(this.contractWrapper, this.storage, this.chainId);\n    }\n    return undefined;\n  }\n  detectErc1155() {\n    if ((0,_contract_appuri_4e9cb063_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__.d)(this.contractWrapper, \"ERC1155\")) {\n      return new _erc_1155_094fadc3_browser_esm_js__WEBPACK_IMPORTED_MODULE_20__.e(this.contractWrapper, this.storage, this.chainId);\n    }\n    return undefined;\n  }\n  detectOwnable() {\n    if ((0,_contract_appuri_4e9cb063_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__.d)(this.contractWrapper, \"Ownable\")) {\n      return new _contract_owner_1378b25d_browser_esm_js__WEBPACK_IMPORTED_MODULE_14__.a(this.contractWrapper);\n    }\n    return undefined;\n  }\n  detectApp() {\n    const metadata = new _contract_appuri_4e9cb063_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__.C(this.contractWrapper, _index_827e427d_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__.bk, this.storage);\n    if ((0,_contract_appuri_4e9cb063_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__.d)(this.contractWrapper, \"AppURI\")) {\n      return new _contract_appuri_4e9cb063_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__.b(this.contractWrapper, metadata, this.storage);\n    } else if ((0,_contract_appuri_4e9cb063_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__.d)(this.contractWrapper, \"ContractMetadata\")) {\n      return new _contract_appuri_4e9cb063_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__.b(this.contractWrapper, metadata, this.storage);\n    }\n    return undefined;\n  }\n  detectDirectListings() {\n    if ((0,_contract_appuri_4e9cb063_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__.d)(this.contractWrapper, \"DirectListings\")) {\n      return new _marketplacev3_offers_49f33f6e_browser_esm_js__WEBPACK_IMPORTED_MODULE_21__.M(this.contractWrapper, this.storage);\n    }\n    return undefined;\n  }\n  detectEnglishAuctions() {\n    if ((0,_contract_appuri_4e9cb063_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__.d)(this.contractWrapper, \"EnglishAuctions\")) {\n      return new _marketplacev3_offers_49f33f6e_browser_esm_js__WEBPACK_IMPORTED_MODULE_21__.a(this.contractWrapper, this.storage);\n    }\n    return undefined;\n  }\n  detectOffers() {\n    if ((0,_contract_appuri_4e9cb063_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__.d)(this.contractWrapper, \"Offers\")) {\n      return new _marketplacev3_offers_49f33f6e_browser_esm_js__WEBPACK_IMPORTED_MODULE_21__.b(this.contractWrapper, this.storage);\n    }\n    return undefined;\n  }\n  detectBaseRouter() {\n    if ((0,_contract_appuri_4e9cb063_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__.d)(this.contractWrapper, _index_827e427d_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__.dL.name)) {\n      return new ExtensionManager(this.contractWrapper);\n    }\n    return undefined;\n  }\n  detectAirdrop20() {\n    if ((0,_contract_appuri_4e9cb063_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__.d)(this.contractWrapper, \"AirdropERC20\")) {\n      return new Airdrop20(this.contractWrapper);\n    }\n    return undefined;\n  }\n  detectAirdrop721() {\n    if ((0,_contract_appuri_4e9cb063_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__.d)(this.contractWrapper, \"AirdropERC721\")) {\n      return new Airdrop721(this.contractWrapper);\n    }\n    return undefined;\n  }\n  detectAirdrop1155() {\n    if ((0,_contract_appuri_4e9cb063_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__.d)(this.contractWrapper, \"AirdropERC1155\")) {\n      return new Airdrop1155(this.contractWrapper);\n    }\n    return undefined;\n  }\n\n  // ========== Account features ==========\n\n  detectAccountFactory() {\n    if ((0,_contract_appuri_4e9cb063_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__.d)(this.contractWrapper, _index_827e427d_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__.dr.name)) {\n      return new _account_factory_f259ae3a_browser_esm_js__WEBPACK_IMPORTED_MODULE_13__.a(this.contractWrapper);\n    }\n    return undefined;\n  }\n  detectAccount() {\n    if ((0,_contract_appuri_4e9cb063_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__.d)(this.contractWrapper, _index_827e427d_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__.dq.name)) {\n      return new _account_factory_f259ae3a_browser_esm_js__WEBPACK_IMPORTED_MODULE_13__.A(this.contractWrapper);\n    }\n    return undefined;\n  }\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@thirdweb-dev/sdk/dist/smart-contract-bf847122.browser.esm.js\n"));

/***/ })

}]);